To be clear, a float also (generally) uses 4 bytes of memory, what Cheat Engine shows as "4 bytes" is the twos complement binary format for integer values in 32 bits (4 bytes) which means that each value must be a whole number (eg. 1 or 2, not 1.5 or 1/20) and is made of 32 bits (8 bits per byte).1 is 00000000000000000000000000000001 and to negate that to get -1 you flip all the bits (aka 1s complement) to 11111111111111111111111111111110 and then add 1 like you would "normally" to get 11111111111111111111111111111111 or FFFFFFFF in hexadecimal. This has the result that the first bit (the most significant bit) is the "sign" bit and 0x7FFFFFFF (hex) is the largest positive value, 2,147,483,647 or 2.1 billion or so.with 10000000000000000000000000000000, 0x80000000 (-2147483648) being the smallest value (notice that it's absolute value is 1 larger than the positive value, that's because of the value 0, which is 32 0s).

It can also be read as "unsigned" meaning that instead of 0x80000000 being read as the smallest value it's simply 1 more than 0x7FFFFFFF (so 2,147,483,648) making the largest value 0xFFFFFFFF (4294967295 about 4.3 billion)

The 1 byte, 2 byte and 8 byte types are simply variations with more or less bits to store the value in

Doubles on the other hand work like floats, but with 64 bits instead of 32 (8 bytes vs 4). Basically they are a binary implementation of scientific numbers where instead of writing/storing 200, 000, 000 for 200 million, you store 2 and 8 with the implication that it stands for 2 * 10^8, except that it'd be 2 * 2^26.575 or so (because, binary). You can see more detail here http://steve.hollasch.net/cgindex/coding/ieeefloat.html

BTW, if you find yourself with a 4 byte value from changed/unchanged scans that doesn't make sense as a "4 byte" or float value, try subtracting 4 from the address and changing it to a double. That's because values are commonly stored backwards by-byte ("Endianness" as in Gulliver's Travels) so that the most significant part of the double is actually at the end in memory, since that's the part that's most likely to change it's the part you're most likely to find but CE needs the address of the other 4 bytes to make sense of it as a double :)
